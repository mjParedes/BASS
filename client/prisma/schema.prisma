generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  SHIPPED
}

enum ProductSize {
  XS
  S
  M
  L
  XL
  XXL
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  orders      Order[]
  addresses   Address[]
}

model Product {
  id          String            @id @default(uuid())
  name        String
  description String?
  price       Decimal           @db.Decimal(10, 2)
  stock       Int               @default(0)
  createdAt   DateTime          @default(now())
  variants    ProductVariant[]
  categories  ProductCategory[]
  orderItems  OrderItem[]
}

model Category {
  id          String            @id @default(uuid())
  name        String
  createdAt   DateTime          @default(now())
  products    ProductCategory[]
}

model Order {
  id          String        @id @default(uuid())
  userId      String
  totalPrice  Decimal       @db.Decimal(10, 2)
  status      OrderStatus
  createdAt   DateTime      @default(now())
  user        User          @relation(fields: [userId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id          String   @id @default(uuid())
  orderId     String
  productId   String
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  order       Order    @relation(fields: [orderId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

model ProductVariant {
  id          String     @id @default(uuid())
  productId   String
  size        ProductSize
  color       String
  stock       Int        @default(0)
  product     Product    @relation(fields: [productId], references: [id])
}

model ProductCategory {
  productId   String
  categoryId  String
  product     Product    @relation(fields: [productId], references: [id])
  category    Category   @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId]) // Composite Primary Key
}

model Address {
  id        String    @id @default(uuid())
  userId    String
  street    String
  city      String
  state     String
  zipCode   String
  country   String
  user      User      @relation(fields: [userId], references: [id])
}

